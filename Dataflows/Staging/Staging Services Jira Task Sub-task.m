let
    BaseUrl = "https://veristream-services.atlassian.net/rest/api/3/search",
    JiraIDPerPage = 50,
 
    GetJson = (Url) =>
        let 
            RawData = Web.Contents(Url),
            Json    = Json.Document(RawData)
        in  Json,
 
    GetJiraIDCount = () =>
        let Url   = BaseUrl & "?maxResults=0",
            Json  = GetJson(Url),
            Count = Json[#"total"]
        in  Count,
 
    GetPage = (Index) =>
        let Skip  = "?startAt=" & Text.From(Index * JiraIDPerPage),
            Top   = "&maxResults=" & Text.From(JiraIDPerPage),
            Url   = BaseUrl & Skip & Top,
            Json  = GetJson(Url),
            Value = Json[#"issues"]
        in  Value,
 
    JiraIDCount = List.Max({ JiraIDPerPage, GetJiraIDCount() }),
    PageCount   = Number.RoundUp(JiraIDCount / JiraIDPerPage),
    PageIndices = { 0 .. PageCount },
    Pages       = List.Transform(PageIndices, each GetPage(_)),
    JiraID      = List.Union(Pages),
    Table       = Table.FromList(JiraID, Splitter.SplitByNothing(), null, null, ExtraValues.Error),
    #"Expanded Column1" = Table.ExpandRecordColumn(Table, "Column1", {"expand", "id", "self", "key", "fields"}, {"Column1.expand", "Column1.id", "Column1.self", "Column1.key", "Column1.fields"}),
    #"Expanded Column1.fields" = Table.ExpandRecordColumn(#"Expanded Column1", "Column1.fields", {"statuscategorychangedate", "issuetype", "timespent", "customfield_10030", "project", "customfield_10033", "fixVersions", "customfield_10034", "aggregatetimespent", "resolution", "customfield_10035", "customfield_10036", "customfield_10037", "customfield_10027", "customfield_10028", "customfield_10029", "resolutiondate", "workratio", "lastViewed", "watches", "created", "customfield_10020", "customfield_10021", "customfield_10022", "customfield_10023", "priority", "customfield_10024", "customfield_10025", "customfield_10026", "labels", "customfield_10016", "customfield_10017", "customfield_10018", "customfield_10019", "timeestimate", "aggregatetimeoriginalestimate", "versions", "issuelinks", "assignee", "updated", "status", "components", "timeoriginalestimate", "description", "customfield_10010", "customfield_10014", "customfield_10015", "customfield_10005", "customfield_10006", "customfield_10007", "security", "customfield_10008", "aggregatetimeestimate", "customfield_10009", "summary", "creator", "subtasks", "reporter", "customfield_10000", "aggregateprogress", "customfield_10001", "customfield_10002", "customfield_10003", "customfield_10004", "customfield_10038", "environment", "duedate", "progress", "votes"}, {"Column1.fields.statuscategorychangedate", "Column1.fields.issuetype", "Column1.fields.timespent", "Column1.fields.customfield_10030", "Column1.fields.project", "Column1.fields.customfield_10033", "Column1.fields.fixVersions", "Column1.fields.customfield_10034", "Column1.fields.aggregatetimespent", "Column1.fields.resolution", "Column1.fields.customfield_10035", "Column1.fields.customfield_10036", "Column1.fields.customfield_10037", "Column1.fields.customfield_10027", "Column1.fields.customfield_10028", "Column1.fields.customfield_10029", "Column1.fields.resolutiondate", "Column1.fields.workratio", "Column1.fields.lastViewed", "Column1.fields.watches", "Column1.fields.created", "Column1.fields.customfield_10020", "Column1.fields.customfield_10021", "Column1.fields.customfield_10022", "Column1.fields.customfield_10023", "Column1.fields.priority", "Column1.fields.customfield_10024", "Column1.fields.customfield_10025", "Column1.fields.customfield_10026", "Column1.fields.labels", "Column1.fields.customfield_10016", "Column1.fields.customfield_10017", "Column1.fields.customfield_10018", "Column1.fields.customfield_10019", "Column1.fields.timeestimate", "Column1.fields.aggregatetimeoriginalestimate", "Column1.fields.versions", "Column1.fields.issuelinks", "Column1.fields.assignee", "Column1.fields.updated", "Column1.fields.status", "Column1.fields.components", "Column1.fields.timeoriginalestimate", "Column1.fields.description", "Column1.fields.customfield_10010", "Column1.fields.customfield_10014", "Column1.fields.customfield_10015", "Column1.fields.customfield_10005", "Column1.fields.customfield_10006", "Column1.fields.customfield_10007", "Column1.fields.security", "Column1.fields.customfield_10008", "Column1.fields.aggregatetimeestimate", "Column1.fields.customfield_10009", "Column1.fields.summary", "Column1.fields.creator", "Column1.fields.subtasks", "Column1.fields.reporter", "Column1.fields.customfield_10000", "Column1.fields.aggregateprogress", "Column1.fields.customfield_10001", "Column1.fields.customfield_10002", "Column1.fields.customfield_10003", "Column1.fields.customfield_10004", "Column1.fields.customfield_10038", "Column1.fields.environment", "Column1.fields.duedate", "Column1.fields.progress", "Column1.fields.votes"}),
    #"Expanded Column1.fields.fixVersions" = Table.ExpandListColumn(#"Expanded Column1.fields", "Column1.fields.fixVersions"),
    #"Expanded Column1.fields.project" = Table.ExpandRecordColumn(#"Expanded Column1.fields.fixVersions", "Column1.fields.project", {"self", "id", "key", "name", "projectTypeKey", "simplified", "avatarUrls"}, {"Column1.fields.project.self", "Column1.fields.project.id", "Column1.fields.project.key", "Column1.fields.project.name", "Column1.fields.project.projectTypeKey", "Column1.fields.project.simplified", "Column1.fields.project.avatarUrls"}),
    #"Expanded Column1.fields.project.avatarUrls" = Table.ExpandRecordColumn(#"Expanded Column1.fields.project", "Column1.fields.project.avatarUrls", {"48x48", "24x24", "16x16", "32x32"}, {"Column1.fields.project.avatarUrls.48x48", "Column1.fields.project.avatarUrls.24x24", "Column1.fields.project.avatarUrls.16x16", "Column1.fields.project.avatarUrls.32x32"}),
    #"Expanded Column1.fields.resolution" = Table.ExpandRecordColumn(#"Expanded Column1.fields.project.avatarUrls", "Column1.fields.resolution", {"self", "id", "description", "name"}, {"Column1.fields.resolution.self", "Column1.fields.resolution.id", "Column1.fields.resolution.description", "Column1.fields.resolution.name"}),
    #"Expanded Column1.fields.customfield_10037" = Table.ExpandRecordColumn(#"Expanded Column1.fields.resolution", "Column1.fields.customfield_10037", {"self", "value", "id"}, {"Column1.fields.customfield_10037.self", "Column1.fields.customfield_10037.value", "Column1.fields.customfield_10037.id"}),
    #"Expanded Column1.fields.customfield_10027" = Table.ExpandListColumn(#"Expanded Column1.fields.customfield_10037", "Column1.fields.customfield_10027"),
    #"Expanded Column1.fields.customfield_10018" = Table.ExpandRecordColumn(#"Expanded Column1.fields.customfield_10027", "Column1.fields.customfield_10018", {"hasEpicLinkFieldDependency", "showField", "nonEditableReason"}, {"Column1.fields.customfield_10018.hasEpicLinkFieldDependency", "Column1.fields.customfield_10018.showField", "Column1.fields.customfield_10018.nonEditableReason"}),
    #"Expanded Column1.fields.subtasks" = Table.ExpandListColumn(#"Expanded Column1.fields.customfield_10018", "Column1.fields.subtasks"),
    #"Expanded Column1.fields.subtasks1" = Table.ExpandRecordColumn(#"Expanded Column1.fields.subtasks", "Column1.fields.subtasks", {"id", "key", "self", "fields"}, {"Column1.fields.subtasks.id", "Column1.fields.subtasks.key", "Column1.fields.subtasks.self", "Column1.fields.subtasks.fields"}),
    #"Expanded Column1.fields.subtasks.fields" = Table.ExpandRecordColumn(#"Expanded Column1.fields.subtasks1", "Column1.fields.subtasks.fields", {"summary", "status", "priority", "issuetype"}, {"Column1.fields.subtasks.fields.summary", "Column1.fields.subtasks.fields.status", "Column1.fields.subtasks.fields.priority", "Column1.fields.subtasks.fields.issuetype"}),
    #"Filtered Rows" = Table.SelectRows(#"Expanded Column1.fields.subtasks.fields", each ([Column1.fields.subtasks.key] <> null)),
    #"Removed Columns" = Table.RemoveColumns(#"Filtered Rows",{"Column1.expand", "Column1.id", "Column1.self"}),
    #"Expanded Column1.fields.issuetype" = Table.ExpandRecordColumn(#"Removed Columns", "Column1.fields.issuetype", {"name"}, {"Column1.fields.issuetype.name"}),
    #"Removed Columns1" = Table.RemoveColumns(#"Expanded Column1.fields.issuetype",{"Column1.fields.statuscategorychangedate", "Column1.fields.timespent", "Column1.fields.customfield_10030", "Column1.fields.project.self", "Column1.fields.project.id", "Column1.fields.project.key", "Column1.fields.project.name", "Column1.fields.project.projectTypeKey", "Column1.fields.project.simplified", "Column1.fields.project.avatarUrls.48x48", "Column1.fields.project.avatarUrls.24x24", "Column1.fields.project.avatarUrls.16x16", "Column1.fields.project.avatarUrls.32x32", "Column1.fields.customfield_10033", "Column1.fields.fixVersions", "Column1.fields.customfield_10034", "Column1.fields.aggregatetimespent", "Column1.fields.resolution.self", "Column1.fields.resolution.id", "Column1.fields.resolution.description", "Column1.fields.resolution.name", "Column1.fields.customfield_10035", "Column1.fields.customfield_10036", "Column1.fields.customfield_10037.self", "Column1.fields.customfield_10037.value", "Column1.fields.customfield_10037.id", "Column1.fields.customfield_10027", "Column1.fields.customfield_10028", "Column1.fields.customfield_10029", "Column1.fields.resolutiondate", "Column1.fields.workratio", "Column1.fields.lastViewed", "Column1.fields.watches", "Column1.fields.created", "Column1.fields.customfield_10020", "Column1.fields.customfield_10021", "Column1.fields.customfield_10022", "Column1.fields.customfield_10023", "Column1.fields.priority", "Column1.fields.customfield_10024", "Column1.fields.customfield_10025", "Column1.fields.customfield_10026", "Column1.fields.labels", "Column1.fields.customfield_10016", "Column1.fields.customfield_10017", "Column1.fields.customfield_10018.hasEpicLinkFieldDependency", "Column1.fields.customfield_10018.showField", "Column1.fields.customfield_10018.nonEditableReason", "Column1.fields.customfield_10019", "Column1.fields.timeestimate", "Column1.fields.aggregatetimeoriginalestimate", "Column1.fields.versions", "Column1.fields.issuelinks", "Column1.fields.assignee", "Column1.fields.updated", "Column1.fields.status", "Column1.fields.components", "Column1.fields.timeoriginalestimate", "Column1.fields.description", "Column1.fields.customfield_10010", "Column1.fields.customfield_10014", "Column1.fields.customfield_10015", "Column1.fields.customfield_10005", "Column1.fields.customfield_10006", "Column1.fields.customfield_10007", "Column1.fields.security", "Column1.fields.customfield_10008", "Column1.fields.aggregatetimeestimate", "Column1.fields.customfield_10009", "Column1.fields.creator", "Column1.fields.subtasks.id", "Column1.fields.reporter", "Column1.fields.customfield_10000", "Column1.fields.aggregateprogress", "Column1.fields.customfield_10001", "Column1.fields.customfield_10002", "Column1.fields.customfield_10003", "Column1.fields.customfield_10004", "Column1.fields.customfield_10038", "Column1.fields.environment", "Column1.fields.duedate", "Column1.fields.progress", "Column1.fields.votes"}),
    #"Expanded Column1.fields.subtasks.fields.status" = Table.ExpandRecordColumn(#"Removed Columns1", "Column1.fields.subtasks.fields.status", {"name"}, {"Column1.fields.subtasks.fields.status.name"}),
    #"Expanded Column1.fields.subtasks.fields.priority" = Table.ExpandRecordColumn(#"Expanded Column1.fields.subtasks.fields.status", "Column1.fields.subtasks.fields.priority", {"name"}, {"Column1.fields.subtasks.fields.priority.name"}),
    #"Expanded Column1.fields.subtasks.fields.issuetype" = Table.ExpandRecordColumn(#"Expanded Column1.fields.subtasks.fields.priority", "Column1.fields.subtasks.fields.issuetype", {"name"}, {"Column1.fields.subtasks.fields.issuetype.name"}),
    #"Removed Columns2" = Table.RemoveColumns(#"Expanded Column1.fields.subtasks.fields.issuetype",{"Column1.fields.subtasks.self"}),
    #"Renamed Columns" = Table.RenameColumns(#"Removed Columns2",{{"Column1.key", "Task Key"}}),
    #"Removed Columns3" = Table.RemoveColumns(#"Renamed Columns",{"Column1.fields.issuetype.name", "Column1.fields.summary"}),
    #"Renamed Columns1" = Table.RenameColumns(#"Removed Columns3",{{"Column1.fields.subtasks.key", "Sub-task Key"}, {"Column1.fields.subtasks.fields.summary", "Summary"}, {"Column1.fields.subtasks.fields.status.name", "Status"}, {"Column1.fields.subtasks.fields.priority.name", "Priority"}, {"Column1.fields.subtasks.fields.issuetype.name", "Issue Type"}}),
    #"Removed Columns4" = Table.RemoveColumns(#"Renamed Columns1",{"Summary", "Status", "Priority", "Issue Type"})
in
    #"Removed Columns4"